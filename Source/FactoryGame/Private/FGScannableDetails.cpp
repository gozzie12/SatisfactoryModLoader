// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGScannableDetails.h"

bool FScannableObjectData::operator ==(const FScannableObjectData& other) const{ return bool(); }
bool FScannableObjectData::operator !=(const FScannableObjectData& other) const{ return bool(); }
bool FScannableDetails::HasRequiredSchematic() const{ return bool(); }
FScannableActorDetails::FScannableActorDetails(AActor* actor){ }
FScannableActorDetails::FScannableActorDetails(const struct FWorldScannableData& scannableData) { }
FVector FScannableActorDetails::GetActorLocation() const { return FVector(); }
TSubclassOf< class UFGSchematic > FScannableDetails::GetRequiredSchematic() const{ return TSubclassOf<class UFGSchematic>(); }
FScannableActorDetails UFGScannableDetails::FindClosestRelevantActor( UWorld* world, const FVector& scanLocation, const float maxRangeSquare, TSubclassOf<AActor> actorClassToScanFor) const{ return FScannableActorDetails(); }
FScannableActorDetails UFGScannableDetailsHostileCreature::FindClosestRelevantActor(UWorld* world, const FVector& scanLocation, const float maxRangeSquared, TSubclassOf<AActor> actorClassToScanFor) const{ return FScannableActorDetails(); }
FScannableActorDetails UFGScannableDetailsRegrowingPickups::FindClosestRelevantActor(UWorld* world, const FVector& scanLocation, const float maxRangeSquared, TSubclassOf<AActor> actorClassToScanFor) const{ return FScannableActorDetails(); }
FScannableActorDetails UFGScannableDetailsHarddrive::FindClosestRelevantActor(UWorld* world, const FVector& scanLocation, const float maxRangeSquared, TSubclassOf<AActor> actorClassToScanFor) const{ return FScannableActorDetails(); }
