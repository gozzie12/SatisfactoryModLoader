// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGDeathMarker.h"
#include "Net/UnrealNetwork.h"

AFGDeathMarker::AFGDeathMarker() : Super() {
	this->mActorRepresentationTexture = nullptr;
	this->mMapText = INVTEXT("");
	this->mCompassMaterialInstance = nullptr;
}
void AFGDeathMarker::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGDeathMarker, mMapText);
}
bool AFGDeathMarker::AddAsRepresentation(){ return bool(); }
bool AFGDeathMarker::UpdateRepresentation(){ return bool(); }
bool AFGDeathMarker::RemoveAsRepresentation(){ return bool(); }
bool AFGDeathMarker::IsActorStatic(){ return bool(); }
FVector AFGDeathMarker::GetRealActorLocation(){ return FVector(); }
FRotator AFGDeathMarker::GetRealActorRotation(){ return FRotator(); }
UTexture2D* AFGDeathMarker::GetActorRepresentationTexture(){ return nullptr; }
FText AFGDeathMarker::GetActorRepresentationText(){ return FText(); }
void AFGDeathMarker::SetActorRepresentationText(const FText& newText){ }
FLinearColor AFGDeathMarker::GetActorRepresentationColor(){ return FLinearColor(); }
void AFGDeathMarker::SetActorRepresentationColor(FLinearColor newColor){ }
ERepresentationType AFGDeathMarker::GetActorRepresentationType(){ return ERepresentationType(); }
bool AFGDeathMarker::GetActorShouldShowInCompass(){ return bool(); }
bool AFGDeathMarker::GetActorShouldShowOnMap(){ return bool(); }
EFogOfWarRevealType AFGDeathMarker::GetActorFogOfWarRevealType(){ return EFogOfWarRevealType(); }
float AFGDeathMarker::GetActorFogOfWarRevealRadius(){ return float(); }
ECompassViewDistance AFGDeathMarker::GetActorCompassViewDistance(){ return ECompassViewDistance(); }
void AFGDeathMarker::SetActorCompassViewDistance(ECompassViewDistance compassViewDistance){ }
UMaterialInterface* AFGDeathMarker::GetActorRepresentationCompassMaterial(){ return nullptr; }
