// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGInputSettings.h"

#if WITH_EDITOR
EDataValidationResult UFGInputSettings::IsDataValid( FDataValidationContext& Context){ return EDataValidationResult::Valid; }
void UFGInputSettings::PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent){ Super::PostEditChangeProperty(PropertyChangedEvent); }
void UFGInputSettings::CalcKeyImagePaddings(UTexture* VariantTexture){ }
#endif 
#if WITH_EDITOR
void UFGInputSettings::Validate(){ }
#endif 
#if WITH_EDITORONLY_DATA
#endif 
UFGInputSettings::UFGInputSettings() : Super() {
	this->mKeyTextureBindings.Emplace();
	this->mVariantTexturePadding.Left = 11.0;
	this->mVariantTexturePadding.Top = 11.0;
	this->mVariantTexturePadding.Right = 11.0;
	this->mVariantTexturePadding.Bottom = 10.0;
}
FName UFGInputSettings::GetCategoryName() const{ return FName(); }
UInputAction* UFGInputSettings::GetInputActionForTag(const FGameplayTag& Tag) const{ return nullptr; }
bool UFGInputSettings::GetKeyTextureBinding(const FKey& Key, FFGKeyTextureBinding& out_Binding) const{ return bool(); }
bool UFGInputSettings::GetTagTextureBinding(const FGameplayTag& Key, FFGTagTextureBinding& out_Binding) const{ return bool(); }
void UFGInputSettings::PostInitProperties(){ Super::PostInitProperties(); }
void UFGInputSettings::RefreshInputActionBindingArray(){ }
void UFGInputSettings::OnAssetAdded(const FAssetData& AssetData){ }
void UFGInputSettings::OnAssetRemoved(const FAssetData& AssetData){ }
void UFGInputSettings::CreateActionTagBinding(const FAssetData& InputActionAssetData){ }
